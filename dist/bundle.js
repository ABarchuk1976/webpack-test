(()=>{"use strict";class e{constructor(){Object.defineProperty(this,"message",{enumerable:!0,configurable:!0,writable:!0,value:"Required value."})}validate(e){return!!e}}class a{constructor(){Object.defineProperty(this,"message",{enumerable:!0,configurable:!0,writable:!0,value:"Value must be a number."})}validate(e){return!!+e}}class t{constructor(){Object.defineProperty(this,"message",{enumerable:!0,configurable:!0,writable:!0,value:"Value must be an email formatted."})}validate(e){return/^\w+@[a-zA-Z_]+?\.[a-zA-Z]{2,3}$/i.test(e)}}class i{static initialize(){i.validators.required=new e,i.validators.number=new a,i.validators.email=new t,i.initialize=()=>{}}static select(e){const a=i.validators[e];if(!a)throw new Error("Do not find validator "+e);return a}}Object.defineProperty(i,"validators",{enumerable:!0,configurable:!0,writable:!0,value:{}});class r{constructor(e){Object.defineProperty(this,"config",{enumerable:!0,configurable:!0,writable:!0,value:e}),i.initialize()}validate(e){const a=[];return Object.keys(e).forEach((t=>{const r=this.config[t];if(!r)return;const l=i.select(r),s=String(e[t]);if(!l.validate(s)){const i=`Do not right value for ${t}: ${e[t]} - ${l.message}`;a.push(i)}})),{valid:!a.length,messages:a}}}const l={fullName:"Andrii Barchuk",age:47,email:"abarchuk1976@gmail.com"},s={fullName:"",age:"47p",email:"abarchuk1976.gmail.com"},n={fullName:"required",email:"email",age:"number"};!function(){const e=new r(n);let a=e.validate(l);console.log(a.valid,a.messages),a=e.validate(s),console.log(a.valid,a.messages)}()})();